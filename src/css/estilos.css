/* puxando a fonte selecionada no google fonts */
body {
    font-family: 'Poppins';
}

.cabecalho {
/* Mexendo na propriedade "pai header" para colocar o menu e o logo, lado a lado. com as tags filho */
    display: flex;
/*usar o flex-direction row, é redundante,pois o display flex ja faz o trabalho */

/*colocando um espaço entre os elementos filhos */
    justify-content: space-between;
    padding: 30px;
    max-width: 1440px; /*largura maxima */
    margin: 0 auto; /*outra forma de centralizar */
}

/* estilizando a classe logo que está dentro da classe cabecalho */

.cabecalho .logo {
    /*diminuindo a largura do logo */
    width: 65px;

}
/* estilizando o Menu, deixando um ao lado do outro*/

.cabecalho .menu {

display: flex;
/*alinhando o menu */
align-items: center; /*alinhamento vertical,pra que o elemento seja alinhado, ele precisa de espaço tanto de altura quanto de largura para funcionar */
/*resolvendo o problema de altura e largura */
height: 100%; /* altura total do elemento pai */

}

.cabecalho nav li a {
    font-weight: bold;
    color: #ffffff;
    font-size: 25px;
    padding: 10px 20px; /*mudar o espaçamento do conteudo até as bordas do topo e dos lados internos */
    border-radius: 50px;
    transition: 0.2s; /*colocar um efeito de tempo para aparecer o efeito  */
}

/* efeito de mouse */

.cabecalho nav li a:hover { /*hover é uma pseudoclasse */
    background-color: #d5011d;

}
.container {
    max-width: 1440px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    /*height: 100vh; viewport height ( altura tela de visualizaçao do usuario, 100 seria 100%)
    a altura do menu principal acaba influenciando */
    /* fazendo o calculo para que 100% da tela seja tirado o tamanho do menu (height) */
    height: calc(100vh - 132px);

    padding: 0 30px 30px; /*espaçamentos laterais  */

}

.container .imagem-titulo {
    max-width: 500px; /*largura maxima */

}

.container .descricao {
    color: #a8add7;
    width: 85%; /*deixar a largura um pouco menor */
    font-size: 18px;
    margin: 30px 0; /* espaçamento 30 em cima e embaixo e lateral nenhum */

}

.container .botao-trailer {
    background-color: #f03a17;
    color: #ffffff;
    padding: 15px; /*espaçamento da borda */
    font-size: 20px;
    font-weight: bold;
    cursor: pointer; /*para aparecer o cursor como uma maozinha */
    border: none;
    text-transform: uppercase; /*texto todo maiusculo */
    transition: 0.5s all ease-in-out; /*  tempo,todas as propriedades, tipo de animação a ser feito (ease,easy in...) colocar no elemento que vai sofrer a transição na pseudoclasse */

}

.container .botao-trailer:hover {
    /* transformar um elemento quando passar o mouse, em escala (scale) e dentro do parentese o tamanho que quer escalar o efeito */
    transform: scale(1.1); 
}

/* estilizando o fundo com o video */

.fundo-video {
    /* fazer ocupar toda a tela,tirando do contexto atual */
    position: absolute;
    /* colocar o video para o fundo do video, usando o z-index, que é o eixo de profundidade */
    z-index: -1;
    width: 100vw;
    height: 100vh;
    overflow: hidden; /*esconder o transbordo(scroll) */
    display: flex;
    justify-content: center;

}

/*aumentar a altura da tag video */

.fundo-video .video {
    height: 100vh;
}
/*criar um pseudoelemento html pelo css */

.fundo-video::after { /*criar elemento depois do .fundo-video */
content: ""; 
height: 100vh;
width: 100vw;
/* colocando "uma folha acima da outra" */
position: absolute;
/*posicionando ele,com propriedades de movimentaçao, inicio do topo e a esquerda */
top: 0;
left: 0;
/* criando o efeito de opacidade, deixando as laterais escuras e somente o meio opaco no cssgradient.io */
background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.8010853999803046) 50%, rgba(0,0,0,1) 100%);

}
/* estilizando o modal */
.modal {
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    background-color: rgba(52, 52, 50, 0.749);
    /*esconder o modal */
    opacity: 0;
    visibility: hidden;
}
/*estilizando o conteudo da moda */

.conteudo-modal {
    display: flex;
    background-color: orange;
    justify-content: center;
    align-items: center;
    flex-direction: column; /*colocar o X em cima do video */
    height: 100vh;
    border-radius: 5px;
    gap: 15px; /*criar um espaçamento entre o X e o video */
    
}

/*estilizando o botão fechar */
.fechar-modal {
    background-color: #ffffff;
    color: #f03a17;
    font-weight: bold;
    font-size: 20px;
    width: 40px;
    text-align: center;
    cursor: pointer;
    border-radius: 10px;

}

.modal iframe {
    border-width: 0; /*largura de borda do iframe */
    width: 640px;
    height: 360px;
}
/*estilizar a classe modal,mas tambem a classe aberta */
.modal.aberto {
    opacity: 1;
    visibility: visible;
}
